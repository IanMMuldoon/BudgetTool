{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ianmu\\\\OneDrive\\\\Desktop\\\\LearnReact\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from 'react';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoint: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["C:/Users/ianmu/OneDrive/Desktop/LearnReact/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"names":["React","Chart","ExpensesChart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","chartDataPoints","label","expense","expenses","expenseMonth","date","getMonth","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAG;AAC1B,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AAEA,QAAMQ,eAAe,GAAG,CACpB;AAACC,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GADoB,EAEpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAFoB,EAGpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAHoB,EAIpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAJoB,EAKpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GALoB,EAMpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GANoB,EAOpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAPoB,EAQpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GARoB,EASpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAToB,EAUpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAVoB,EAWpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAXoB,EAYpB;AAACK,IAAAA,KAAK,EAAE,KAAR;AAAeL,IAAAA,KAAK,EAAE;AAAtB,GAZoB,CAAxB;;AAcA,OAAI,MAAMM,OAAV,IAAqBX,KAAK,CAACY,QAA3B,EAAoC;AAChC,UAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;AACAN,IAAAA,eAAe,CAACI,YAAD,CAAf,CAA8BR,KAA9B,IAAuCM,OAAO,CAACK,MAA/C;AACH;;AAED,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEP;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAzBD;;KAAMV,a;AA0BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props =>{\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    \r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0}\r\n    ];\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoint={chartDataPoints}/>;\r\n\r\n};\r\nexport default ExpensesChart;"]},"metadata":{},"sourceType":"module"}